apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s" .Values.app-name .Values.env }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.app-name }}
spec:
{{- if eq .Values.env "prod" }}
  replicas: 5
{{- else }}
  replicas: 3
{{- end }}
  selector:
    matchLabels:
      app: {{ printf "%s-%s" .Values.app-name .Values.env }}
      env: {{ .Values.env }}
  template:
    metadata:
      labels:
        app: {{ printf "%s-%s" .Values.app-name .Values.env }}
      annotations:
        configChecksum: "sha256:{{ .Values.configChecksum }}"
    spec:
      containers:
      - name: {{ printf "%s-%s" .Values.app-name .Values.env }}
        image: busybox:stable
        args: ["--spring.profiles.active=env: {{ .Values.env }}"]  # Change to "prd" for production
        ports:
        - containerPort: 8080
        - containerPort: 8081
        - containerPort: 8082
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: config-volume
          mountPath: /app/config.json
          subPath: config.json
        resources:
          requests:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
          limits:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
        lifecycle:
          preStop:
            exec:
              command: ["wget", "http://localhost:8080/service/shutdown"]
      volumes:
      - name: config-volume
        configMap:
          name: sample-config
      terminationGracePeriodSeconds: 30
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
